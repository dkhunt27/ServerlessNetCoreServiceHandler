{
  "service": {
    "service": "ServerlessNetCoreServiceHandler",
    "serviceObject": {
      "name": "ServerlessNetCoreServiceHandler"
    },
    "provider": {
      "stage": "v1",
      "region": "us-east-2",
      "variableSyntax": "\\${([ ~:a-zA-Z0-9._'\",\\-\\/\\(\\)]+?)}",
      "name": "aws",
      "runtime": "dotnetcore2.0",
      "profile": "serverless",
      "deploymentBucket": "matt-us-east-2-serverless-deploys",
      "versionFunctions": true,
      "remoteFunctionData": null,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "HelloLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/ServerlessNetCoreServiceHandler-v1-hello"
            }
          },
          "HealthcheckLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/ServerlessNetCoreServiceHandler-v1-healthcheck"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "v1",
                        "ServerlessNetCoreServiceHandler",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/ServerlessNetCoreServiceHandler-v1-hello:*"
                          },
                          {
                            "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/ServerlessNetCoreServiceHandler-v1-healthcheck:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/ServerlessNetCoreServiceHandler-v1-hello:*:*"
                          },
                          {
                            "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/ServerlessNetCoreServiceHandler-v1-healthcheck:*:*"
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "ServerlessNetCoreServiceHandler",
                    "v1",
                    "us-east-2",
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "HelloLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "matt-us-east-2-serverless-deploys",
                "S3Key": "serverless/ServerlessNetCoreServiceHandler/v1/1523220786976-2018-04-08T20:53:06.976Z/deploy-package.zip"
              },
              "FunctionName": "ServerlessNetCoreServiceHandler-v1-hello",
              "Handler": "Handlers::Handlers.Handler::Hello",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "dotnetcore2.0",
              "Timeout": 6
            },
            "DependsOn": [
              "HelloLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "HelloLambdaVersionb2YFyIA1HDGtWxkQo9uZit2BTI3Mnwemoo8DXbOOFOE": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "HelloLambdaFunction"
              },
              "CodeSha256": "4xMKMvu96shEfLVwT80JcCf+xw6AxMenXGu4mVP3a1c="
            }
          },
          "HealthcheckLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "matt-us-east-2-serverless-deploys",
                "S3Key": "serverless/ServerlessNetCoreServiceHandler/v1/1523220786976-2018-04-08T20:53:06.976Z/deploy-package.zip"
              },
              "FunctionName": "ServerlessNetCoreServiceHandler-v1-healthcheck",
              "Handler": "Handlers::Handlers.Handler::HealthCheck",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "dotnetcore2.0",
              "Timeout": 6
            },
            "DependsOn": [
              "HealthcheckLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "HealthcheckLambdaVersionftTH4q1Hr7hzhKU8WEOiR0QRkCzpmpeuqxBivMO7N4g": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "HealthcheckLambdaFunction"
              },
              "CodeSha256": "4xMKMvu96shEfLVwT80JcCf+xw6AxMenXGu4mVP3a1c="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "v1-ServerlessNetCoreServiceHandler",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              }
            }
          },
          "ApiGatewayResourceHello": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "hello",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceHealthcheck": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "healthcheck",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodHelloPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceHello"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "HelloLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodHealthcheckGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceHealthcheck"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "HealthcheckLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayDeployment1523220787007": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "v1"
            },
            "DependsOn": [
              "ApiGatewayMethodHelloPost",
              "ApiGatewayMethodHealthcheckGet"
            ]
          },
          "HelloLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "HelloLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "HealthcheckLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "HealthcheckLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": "matt-us-east-2-serverless-deploys"
          },
          "HelloLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "HelloLambdaVersionb2YFyIA1HDGtWxkQo9uZit2BTI3Mnwemoo8DXbOOFOE"
            }
          },
          "HealthcheckLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "HealthcheckLambdaVersionftTH4q1Hr7hzhKU8WEOiR0QRkCzpmpeuqxBivMO7N4g"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.us-east-2.amazonaws.com/v1"
                ]
              ]
            }
          }
        }
      },
      "vpc": {}
    },
    "functions": {
      "hello": {
        "handler": "Handlers::Handlers.Handler::Hello",
        "events": [
          {
            "http": "post hello/"
          }
        ],
        "name": "ServerlessNetCoreServiceHandler-v1-hello",
        "package": {},
        "vpc": {}
      },
      "healthcheck": {
        "handler": "Handlers::Handlers.Handler::HealthCheck",
        "events": [
          {
            "http": "get healthcheck/"
          }
        ],
        "name": "ServerlessNetCoreServiceHandler-v1-healthcheck",
        "package": {},
        "vpc": {}
      }
    }
  },
  "package": {
    "artifactDirectoryName": "serverless/ServerlessNetCoreServiceHandler/v1/1523220786976-2018-04-08T20:53:06.976Z",
    "artifact": "deploy-package.zip"
  }
}